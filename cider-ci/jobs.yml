###############################################################################
### Build #####################################################################
###############################################################################

'build':
  run_when:
    integration tests passed:
      type: job
      job_key: integration-tests
      states: [passed]

  name: Build the deployment archive
  context:
    include: cider-ci/contexts/build_archive.yml


###############################################################################
### Deploy jobs ###############################################################
###############################################################################

### HSLU ######################################################################

'deploy_hslu_prod':
  include: cider-ci/jobs/deploy-defaults.yml
  name: "Deploy to prod-hslu"
  context:
    tasks:
      deploy:
        exclusive_global_resources:
          "prod-hslu.madek.zhdk.ch": true
        environment_variables:
          HOSTS_FILE: inventories/zhdk/hosts_hslu

### medienarchiv ##############################################################

'deploy_medienarchive':
  include: cider-ci/jobs/deploy-defaults.yml
  name: "\uD83C\uDF10  Deploy to medienarchiv"
  depends_on: # NOTE: not strictly needed, but doesn't hurt
    good to merge: { job_key: good-to-merge, type: job, states: [passed] }
  context:
    tasks:
      deploy:
        exclusive_global_resources:
          "medienarchiv.zhdk.ch": true
        environment_variables:
          HOSTS_FILE: inventories/zhdk/hosts_medienarchiv
          # defaults but let's make it very clear here:
          DROP_DATABASE: 'false'
          RESTORE_STRUCTURE_AND_DATA: 'false'
        scripts:
          check-head-of-release:
            body: |
              set -eux
              git fetch --all
              [[ $(git log -n 1 --pretty=%H HEAD -- ) == $(git log -n 1 --pretty=%H origin/release -- ) ]]
          deploy:
            start_when:
              only when we are on the head of release:
                script_key: check-head-of-release

### staging ###################################################################

'deploy_staging':
  include: cider-ci/jobs/deploy-defaults.yml
  name: "\uD83C\uDFE2 Deploy to staging"
  context:
    tasks:
      deploy:
        exclusive_global_resources:
          "staging.madek.zhdk.ch": true
        environment_variables:
          HOSTS_FILE: inventories/zhdk/hosts_staging
          DROP_DATABASE: 'true'
          RESTORE_STRUCTURE_AND_DATA: 'true'

### test - auto-deploy from master #################################################

'deploy_test':
  include: cider-ci/jobs/deploy-defaults.yml
  name: "\uD83C\uDFE2 Deploy to test"
  run_when: &RUN_ON_MASTER
    master branch:
      type: branch
      include_match: ^master$
  context:
    tasks:
      deploy:
        exclusive_global_resources:
          "test.madek.zhdk.ch": true
        environment_variables:
          HOSTS_FILE: inventories/zhdk/hosts_test
          DROP_DATABASE: 'true'
          RESTORE_STRUCTURE_AND_DATA: 'true'


### test-blank - auto-deploy from master ###########################################

'deploy_test-blank':
  include: cider-ci/jobs/deploy-defaults.yml
  name: "\uD83C\uDFE2 Deploy to test-blank"
  description: Deploy to test-blank incl. Re-Installation & First Time Setups ("Fresh Instance")
  context:
    tasks:
      deploy:
        exclusive_global_resources:
          "test-blank.madek.zhdk.ch": true
        environment_variables:
          HOSTS_FILE: inventories/zhdk/hosts_test-blank
          DROP_DATABASE: 'true'
          RESTORE_STRUCTURE_AND_DATA: 'false'
        scripts:
          first_time_setup:
            start_when:
              deployed:
                script_key: deploy
            body: cd deploy && ansible-playbook -i inventories/zhdk/hosts_test-blank play_first-time-setup.yml
