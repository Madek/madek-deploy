scripts:
  prepare-container:
    start_when:
      container has been created:
        script_key: create-container
    timeout: 10 Minutes
    body: |
      #!/usr/bin/env bash
      set -eux
      lxc exec ${CONTAINER_NAME} -- ifconfig

      # remove broken git object reference config
      rm .git/objects/info/alternates
      git fetch
      git repack

      # the next command will not work if we invoke it too quickly after
      # booting the machine
      sleep 30
      CONTAINER_IP=$(lxc list --format=json ${CONTAINER_NAME} | jq -r ".[].state.network.eth0.addresses | .[0].address")
      until ping -c1 -W1 ${CONTAINER_IP}; do sleep 3; done

      lxc exec ${CONTAINER_NAME} -- bash - < ${CIDER_CI_WORKING_DIR}/deploy/container-test/bin/install-dependencies

      lxc exec ${CONTAINER_NAME} -- \
        /bin/sh -c "mkdir -p /root/.ssh && echo '$(cat ~/.ssh/id_rsa.pub)' >> /root/.ssh/authorized_keys"

  deploy-to-container:
    timeout: 20 Minutes
    start_when:
      container has been prepared:
        script_key: prepare-container
    body: |
      #!/usr/bin/env bash
      set -eux

      CONTAINER_IP=$(lxc list --format=json ${CONTAINER_NAME} | jq -r ".[].state.network.eth0.addresses | .[0].address")

      cd deploy

      bin/ansible-playbook \
        -i container-test/inventory/hosts \
        -e "ansible_ssh_host=${CONTAINER_IP}" \
        play_setup-and-deploy.yml

      bin/ansible-playbook \
        -i container-test/inventory/hosts \
        -e "ansible_ssh_host=${CONTAINER_IP}" \
        -e "admin_password=supersecret" \
        play_first-time-setup.yml

      echo OK
