- service:
    name: "{{madek_webapp_service_name}}"
    state: stopped
  failed_when: false

- command: logrotate -f /etc/logrotate.d/{{madek_webapp_service_name}}
  failed_when: false

# FIXME: https://github.com/ansible/ansible/issues/39456
- name: change owner
  shell: 'chown -R "{{madek_user}}":"{{madek_user}}" "{{madek_root_dir}}"'
  # TODO: can fail on storage read only instances (will fail on HFG and HSLU staging)
  # go back to file module and remove this or remove comments and keep the hack
  ignore_errors: yes
# - file:
#     path: "{{madek_root_dir}}"
#     owner: "{{madek_user}}"
#     group: "{{madek_user}}"
#     state: directory
#     recurse: yes

- name: bundle
  become: true
  become_user: root
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        cd {{madek_webapp_dir}}
        export RAILS_ENV={{rails_env}}
        /usr/local/bin/chruby-exec ruby-{{madek_ruby_versions.datalayer}} -- \
          bundle install
      EOF
  tags: [bundle]

- name: Drop DB
  become: true
  become_user: root
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        cd {{madek_webapp_dir}}
        export RAILS_ENV={{rails_env}}
        export DISABLE_DATABASE_ENVIRONMENT_CHECK=1
        /usr/local/bin/chruby-exec ruby-{{madek_ruby_versions.datalayer}} -- \
          bundle exec rake db:pg:terminate_connections db:drop
      EOF
  when: "drop_database or restore_structure_and_data"
  register: madek_drop_db_task
  changed_when: not madek_drop_db_task.failed
  failed_when: |
    madek_drop_db_task.failed and ('database "' ~ database.name ~ '" does not exist' not in madek_drop_db_task.stderr)
  tags: [drop-db]

- name: Create DB
  become: true
  become_user: root
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        cd {{madek_webapp_dir}}
        export RAILS_ENV={{rails_env}}
        /usr/local/bin/chruby-exec ruby-{{madek_ruby_versions.datalayer}} -- \
          bundle exec rake db:create
      EOF
  register: madek_create_db_task
  changed_when: not madek_create_db_task.failed
  failed_when: |
    madek_create_db_task.failed and ("Database '" ~ database.name ~ "' already exists" not in madek_create_db_task.stderr)

- name: Restore structure and data
  become: true
  become_user: root
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        pg_restore --exit-on-error --single-transaction -x -O -d '{{database.name}}' '{{restore_structure_and_data_file}}'
      EOF
  register: restore
  when: restore_structure_and_data
  changed_when: not restore.stdout | match("")
  tags: [restore_structure_and_data]

- name: Migrate
  become: true
  become_user: root
  # echo "DROP TABLE ar_internal_metadata;" | psql "{{database.name}}";
  # echo "INSERT INTO "ar_internal_metadata" VALUES ('environment', '{{rails_env}}', now(), now() ) ON CONFLICT DO UPDATE;" | psql "{{database.name}}";
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        cd {{madek_webapp_dir}}
        export RAILS_ENV="{{rails_env}}"
        /usr/local/bin/chruby-exec ruby-{{madek_ruby_versions.datalayer}} -- \
          bundle exec rake db:migrate
      EOF
  register: migrate
  changed_when: 'not migrate.stdout == ""'

- name: Seed (set core data)
  become: true
  become_user: root
  shell:
    cmd: |
      sudo -iu "{{madek_user}}" -- bash -eux <<EOF
        cd {{madek_webapp_dir}}
        export RAILS_ENV={{rails_env}}
        /usr/local/bin/chruby-exec ruby-{{madek_ruby_versions.datalayer}} -- \
          bundle exec rake db:seed
      EOF

# FIXME: https://github.com/ansible/ansible/issues/39456
- name: create DB dir, change owner to root
  shell: "mkdir -p '{{madek_webapp_dir}}/db' && chown -R root:root '{{madek_webapp_dir}}/db'"
  # TODO: can fail on storage read only instances (will fail on HFG and HSLU staging)
  # go back to file module and remove this or remove comments and keep the hack
  ignore_errors: yes
# - file:
#     path: "{{madek_webapp_dir}}/db"
#     owner: root
#     group: root
#     state: directory
#     recurse: yes
