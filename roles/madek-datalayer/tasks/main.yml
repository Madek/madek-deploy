- service:
    name: "{{madek_webapp_service_name}}"
    state: stopped
  failed_when: false

- command: logrotate -f /etc/logrotate.d/{{madek_webapp_service_name}}
  failed_when: false

- name: change owner
  ignore_errors: yes
  file:
    path: "{{madek_root_dir}}"
    owner: "{{madek_user}}"
    group: "{{madek_user}}"
    state: directory
    recurse: yes

- name: asdf ruby
  include_role:
    name: asdf-ruby
  vars:
    asdf_user: '{{madek_user}}'

- name: install ruby
  become: true
  become_user: '{{madek_user}}'
  shell: |
      #!/usr/bin/env bash
      set -euo pipefail
      source ~/.asdf/asdf.sh
      cd {{madek_webapp_dir}}
      export RAILS_ENV={{rails_env}}
      asdf install ruby
  args:
    executable: /bin/bash
  async: 3600
  poll: 1

- name: bundle
  become: true
  become_user: '{{madek_user}}'
  shell: |
      #!/usr/bin/env bash
      set -euo pipefail
      source ~/.asdf/asdf.sh
      cd {{madek_webapp_dir}}
      export RAILS_ENV={{rails_env}}
      bundle install
  args:
    executable: /bin/bash
  async: 3600
  poll: 1

- name: Drop DB
  become: true
  become_user: '{{madek_user}}'
  shell: |
      #!/usr/bin/env bash
      set -euo pipefail
      source ~/.asdf/asdf.sh
      cd {{madek_webapp_dir}}
      export RAILS_ENV={{rails_env}}
      export DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      bundle exec rake db:pg:terminate_connections db:drop
  args:
    executable: /bin/bash
  when: "drop_database or restore_structure_and_data"
  register: madek_drop_db_task
  changed_when: not madek_drop_db_task.failed
  failed_when: |
    madek_drop_db_task.failed and ('database madek does not exist' not in madek_drop_db_task.stderr)
  tags: [drop-db]

- name: Create DB
  become: true
  become_user: '{{madek_user}}'
  shell: |
    #!/usr/bin/env bash
    set -euo pipefail
    source ~/.asdf/asdf.sh
    cd {{madek_webapp_dir}}
    export RAILS_ENV={{rails_env}}
    bundle exec rake db:create
  args:
    executable: /bin/bash
  register: madek_create_db_task
  changed_when: not madek_create_db_task.failed
  failed_when: |
    madek_create_db_task.failed and ("Database madek already exists" not in madek_create_db_task.stderr)

- name: Restore structure and data
  become: true
  become_user: '{{madek_user}}'
  shell: >
    /usr/lib/postgresql/15/bin/pg_restore 
    --port 5415 --exit-on-error --single-transaction -x -O 
    -d madek '{{restore_structure_and_data_file}}'
  register: restore
  when: restore_structure_and_data
  changed_when: not ( restore.stdout is match("") )
  tags: [restore_structure_and_data]
  async: 3600
  poll: 1

- name: Migrate
  become: true
  become_user: '{{madek_user}}'
  shell: |
    #!/usr/bin/env bash
    set -euo pipefail
    source ~/.asdf/asdf.sh
    cd {{madek_webapp_dir}}
    export RAILS_ENV="{{rails_env}}"
    bundle exec rake db:migrate
  args:
    executable: /bin/bash
  register: migrate
  changed_when: 'not migrate.stdout == ""'
  async: 3600
  poll: 1


- name: Seed (set core data)
  become: true
  become_user: '{{madek_user}}'
  shell: |
    #!/usr/bin/env bash
    set -euo pipefail
    source ~/.asdf/asdf.sh
    cd {{madek_webapp_dir}}
    export RAILS_ENV={{rails_env}}
    bundle exec rake db:seed
  args:
    executable: /bin/bash

- name: create DB dir, change owner to root
  file:
    path: "{{madek_webapp_dir}}/db"
    owner: root
    group: root
    state: directory
    recurse: yes

- name: create {{database.user}}-readonly DB user
  postgresql_user:
    name: '{{database.user}}-readonly'
    role_attr_flags: LOGIN
    login_user: root
    port: 5415

- name: grant read for {{database.user}}-readonly on madek
  postgresql_privs:
    database: madek
    objs: TABLES
    privs: SELECT
    roles: '{{database.user}}-readonly'
    schema: public
    state: present
    type: default_privs
    login_user: root
    port: 5415

- name: grand exec for {{database.user}}-readonly on madek
  postgresql_privs:
    database: madek
    objs: ALL_IN_SCHEMA
    privs: EXECUTE
    roles: '{{database.user}}-readonly'
    schema: public
    state: present
    type: function
    login_user: root
    port: 5415
