- name: find existing apache enabled site files
  find:
    paths: /etc/apache2/sites-enabled/
    file_type: any
    patterns:
     - "^madek.*$"
    use_regex: yes
  register: madek_apache_site_enabled_files

- name: remove madek site_enabled configuration files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ madek_apache_site_enabled_files.files }}"


- name: find existing apache available site files
  find:
    paths: /etc/apache2/sites-available/
    file_type: any
    patterns:
     - "^madek.*$"
    use_regex: yes
  register: madek_apache_site_available_files

- name: remove madek site_available configuration files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ madek_apache_site_available_files.files }}"

- name: create document root directory
  file:
    path: /var/www/madek
    state: directory
    mode: 0755

- name: madek apache configuration directory
  file:
    path: /etc/apache2/madek/conf.d
    state: directory
    mode: 0755

- template:
    src: custom.conf
    dest: /etc/apache2/madek/conf.d/madek_900_custom.conf
    mode: 0644

- template:
    src: main.conf
    dest: /etc/apache2/madek/conf.d/madek_100_main.conf
    mode: 0644

- template:
    src: shibboleth.conf
    dest: /etc/apache2/madek/conf.d/madek_100_shibboleth.conf
    mode: 0644
  when: shibboleth_sign_in_enabled

- include_tasks: virtual-host.yml
  with_indexed_items: "{{madek_virtual_hosts}}"

- include_tasks: basic_auth.yml

- template:
    src: robots.txt
    dest: "/var/www/madek/robots.txt"
    mode: 0644

- name: create symlink for sitemaps
  file:
    state: link
    src: /madek/server/webapp/public/sitemaps
    dest: /var/www/madek/sitemaps
    force: yes

- name: disable all madek maintenance sites
  shell: rm -rf /etc/apache2/sites-enabled/madek-maintenance*

- name: reload reverse-proxy
  service:
    name: apache2
    state: reloaded
