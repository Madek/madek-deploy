# Managed with ansible


<VirtualHost {{virtual_host.ip}}:443>

{% if virtual_host.hostname %}
  ServerName {{virtual_host.hostname}}
{% endif %}

  SSLEngine on
{% if reverse_proxy_custom_ssl_config is defined %}
{{reverse_proxy_custom_ssl_config}}
{% else %}
  SSLCertificateFile {{virtual_host.ssl_certificate_file}}
  SSLCertificateKeyFile {{virtual_host.ssl_certificate_key_file}}
{% endif %}

  SSLProxyEngine on
  SSLProxyVerify none
  SSLProxyCheckPeerCN off
  SSLProxyCheckPeerName off

  # we MUST tell rack/rails that the proxied request came via HTTPS!
  RequestHeader add X-Forwarded-Proto "https"

  Header always set X-Content-Type-Options nosniff

  # Force all cookies to be secure
  Header edit Set-Cookie (.*) "$1;Secure"


  #############################################################################
  # Include other config files ################################################
  #############################################################################


  Include /etc/apache2/madek/conf.d/*.conf


  #############################################################################
  # Logging configuration #####################################################
  #############################################################################


  # needs forensic logging module
  # ForensicLog ${APACHE_LOG_DIR}/{{virtual_host.hostname}}_https_forensic.log

  LogFormat "%a %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\" \"%{http-uid}i\" %{REMOTE_IPHASH}e" custom-access

  ErrorLog ${APACHE_LOG_DIR}/{{virtual_host.hostname}}_https_error.log
  LogLevel error

  CustomLog ${APACHE_LOG_DIR}/{{virtual_host.hostname}}_https.log custom-access
  CustomLog ${APACHE_LOG_DIR}/{{virtual_host.hostname}}_https_cache.log  "%t SOURCE-IP=%a CACHE-STATUS='%{cache-status}e' URL=%U USER-AGENT='%{User-agent}i'"


  # Custom configuration ######################################################
  #

{% if virtual_host.custom_config is defined %}
  {{virtual_host.custom_config}}
{% endif %}



</VirtualHost>

# --- START SHARED SSL CONFIG ---
# generated 2020-11-23, Mozilla Guideline v5.6, Apache 2.4.25, OpenSSL 1.1.0l, intermediate configuration, no OCSP
# https://ssl-config.mozilla.org/#server=apache&version=2.4.25&config=intermediate&openssl=1.1.0l&ocsp=false&guideline=5.6

# TODO: test if we can enable this
# # enable HTTP/2, if available
# Protocols h2 http/1.1

Header always set Strict-Transport-Security "max-age=63072000"

# intermediate configuration
SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
SSLHonorCipherOrder     off
SSLSessionTickets       off
# --- END SHARED SSL CONFIG ---

# vim: syntax=apache
